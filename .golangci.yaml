run:
  timeout: 5m
linters:
  enable:
  - asciicheck
  - bodyclose
  - depguard
  - dogsled
  - durationcheck
  - errcheck
  - errorlint
  - exhaustive
  - exportloopref
  - gci
  - godot
  - gofmt
  - gofumpt
  - goimports
  - revive
  - gomnd
  - gosec
  - govet
  - importas
  - ineffassign
  - megacheck
  - misspell
  - nakedret
  - nilerr
  - nolintlint
  - predeclared
  - revive
  - staticcheck
  - structcheck
  - typecheck
  - unconvert
  - unparam
  - varcheck
  - wastedassign
linters-settings:
  gci:
    sections:
      - standard
      - default
      - prefix(github.com/kong/kubernetes-telemetry)
  importas:
    no-unaliased: true
    alias:
      - pkg: k8s.io/api/core/v1
        alias: corev1
      - pkg: k8s.io/api/apps/v1
        alias: appsv1
      - pkg: k8s.io/api/admission/v1
        alias: admissionv1
      - pkg: k8s.io/api/networking/v1
        alias: netv1
      - pkg: k8s.io/api/networking/v1beta1
        alias: netv1beta1

      - pkg: k8s.io/apimachinery/pkg/apis/meta/v1
        alias: metav1
      - pkg: sigs.k8s.io/gateway-api/apis/(v[\w\d]+)
        alias: gateway${1}
  revive:
    severity: error
    rules:
      - name: exported
        disabled: false
issues:
  fix: true
  # Independently of option `exclude` we use default exclude patterns,
  # it can be disabled by this option.
  # To list all excluded by default patterns execute `golangci-lint run --help`.
  # Default: true.
  exclude-use-default: false

  exclude:
  # EXC0001 errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
  - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?Setenv). is not checked
   # EXC0003 golint: False positive when tests are defined in package 'test'
  - func name will be used as test\.Test.* by other packages, and that stutters; consider calling this
   # EXC0004 govet: Common false positives
  - (possible misuse of unsafe.Pointer|should have signature)
   # EXC0005 staticcheck: Developers tend to write in C-style with an explicit 'break' in a 'switch', so it's ok to ignore
  - ineffective break statement. Did you mean to break out of the outer loop
   # EXC0006 gosec: Too many false-positives on 'unsafe' usage
  - Use of unsafe calls should be audited
   # EXC0007 gosec: Too many false-positives for parametrized shell calls
  - Subprocess launch(ed with variable|ing should be audited)
   # EXC0008 gosec: Duplicated errcheck checks
  - (G104|G307)
   # EXC0009 gosec: Too many issues in popular repos
  - (Expect directory permissions to be 0750 or less|Expect file permissions to be 0600 or less)
   # EXC0010 gosec: False positive is triggered by 'src, err := ioutil.ReadFile(filename)'
  - Potential file inclusion via variable
   # EXC0013 revive: Annoying issue about not having a comment. The rare codebase has such comments
  - package comment should be of the form "(.+)...
   # EXC0015 revive: Annoying issue about not having a comment. The rare codebase has such comments
  - should have a package comment, unless it's in another file for this package
